/*
#define MACRO(NAME, TYPE, WAIT_TERM, TAP_TERM, ...)	\
    NAME: macro_##NAME { 									\
        label = ZMK_HELPER_STRINGIFY(macro_ ## NAME);		\
		ZMK_BEHAVIOR_CORE_ ## TYPE;							\
        wait-ms = <WAIT_TERM>; 								\
        tap-ms = <TAP_TERM>; 								\
    	__VA_ARGS__  		                            	\
};

"zmk,behavior-macro"
"zmk,behavior-macro-one-param"
"zmk,behavior-macro-two-param"
*/

#define MACRO_TAP_TERM 10
#define MACRO_WAIT_TERM 10

macros {
	
	ZMK_BEHAVIOR(m2, macro_two_param,
		wait-ms = <MACRO_WAIT_TERM>;
		tap-ms = <MACRO_TAP_TERM>;
		bindings = <&kp>, <&kp>;
	)
/*
	ZMK_BEHAVIOR(m2, macro_two_param,
		wait-ms = <MACRO_WAIT_TERM>;
		tap-ms = <MACRO_TAP_TERM>;
		bindings = <&macro_param_1to1>
			, <&macro_tap &kp MACRO_PLACEHOLDER>
			, <&macro_param_2to1>
			, <&macro_tap &kp MACRO_PLACEHOLDER>;
	)

*/
	ZMK_BEHAVIOR(mtt, macro_one_param,
		wait-ms = <MACRO_WAIT_TERM>;
		tap-ms = <MACRO_TAP_TERM>;
		bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>
			, <&macro_param_1to1 &kp MACRO_PLACEHOLDER>
			, <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
	)


	ZMK_BEHAVIOR(test, macro,
		wait-ms = <MACRO_WAIT_TERM>;
		tap-ms = <MACRO_TAP_TERM>;
		bindings = <&kp LBRC>, <&kp RBRC>;
	)
};