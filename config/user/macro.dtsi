/*
#define MACRO(NAME, TYPE, WAIT_TERM, TAP_TERM, ...)	\
    NAME: macro_##NAME { 									\
        label = ZMK_HELPER_STRINGIFY(macro_ ## NAME);		\
		ZMK_BEHAVIOR_CORE_ ## TYPE;							\
        wait-ms = <WAIT_TERM>; 								\
        tap-ms = <TAP_TERM>; 								\
    	__VA_ARGS__  		                            	\
};

"zmk,behavior-macro"
"zmk,behavior-macro-one-param"
"zmk,behavior-macro-two-param"
*/

#define MACRO_TAP_TERM 10
#define MACRO_WAIT_TERM 10

macros {
	
	/*
	2023-08-24 
	The below is temporary because Nick Conway started his dev branch before main zmk released parameterized macros

	#TODO remove this in the future
	*/

	// brackets, quotes then put cursor inside

	ZMK_BEHAVIOR(m_brc, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp LBRC>
			, <&kp RBRC>
			, <&kp LEFT>;
	)

	ZMK_BEHAVIOR(m_lgt, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp LT>
			, <&kp GT>
			, <&kp LEFT>;
	)

	ZMK_BEHAVIOR(m_bkt, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp LBKT>
			, <&kp RBKT>
			, <&kp LEFT>;
	)

	ZMK_BEHAVIOR(m_par, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp LPAR>
			, <&kp RPAR>
			, <&kp LEFT>;
	)

	ZMK_BEHAVIOR(m_sqt, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp SQT>
			, <&kp SQT>
			, <&kp LEFT>;
	)

	ZMK_BEHAVIOR(m_dqt, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp DQT>
			, <&kp DQT>
			, <&kp LEFT>;
	)


	// double tap keys

	ZMK_BEHAVIOR(m_bslh, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp BSLH>
			, <&kp BSLH>;
	)

	ZMK_BEHAVIOR(m_fslh, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp FSLH>
			, <&kp FSLH>;
	)

	ZMK_BEHAVIOR(m_und, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp UNDER>
			, <&kp UNDER>;
	)

	ZMK_BEHAVIOR(m_pipe, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp PIPE>
			, <&kp PIPE>;
	)

	ZMK_BEHAVIOR(m_hash, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp HASH>
			, <&kp HASH>;
	)

	ZMK_BEHAVIOR(m_eql, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp EQUAL>
			, <&kp EQUAL>;
	)

	ZMK_BEHAVIOR(m_amp, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp AMPS>
			, <&kp AMPS>;
	)

	// custom macros

	ZMK_BEHAVIOR(m_neql, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp EXCL>
			, <&kp EQUAL>;
	)

	ZMK_BEHAVIOR(m_grv, macro,
		ZMK_MACRO_CORE
		bindings = 
			<&kp GRAVE>
			, <&kp GRAVE>
			, <&kp GRAVE>;
	)
};