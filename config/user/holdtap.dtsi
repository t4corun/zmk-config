
// hold to get a key, tap to get another
ZMK_BEHAVIOR(ht, hold_tap, 
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP_TERM>;
	bindings = <&kp>, <&kp>;	
)

// basically layer taps with custom tapping terms
ZMK_BEHAVIOR(mou, hold_tap, 
	flavor = "tap-preferred";
	tapping-term-ms = <MOUSE_TAP_TERM>;
	quick-tap-ms = <QUICK_TAP_TERM>;
	bindings = <&mo>, <&kp>;	
)

ZMK_BEHAVIOR(nav, hold_tap, 
	flavor = "tap-preferred";
	tapping-term-ms = <NAV_TAP_TERM>;
	quick-tap-ms = <QUICK_TAP_TERM>;
	bindings = <&mo>, <&kp>;	
)


/*
2023-08-24

Hold Tap architecture
- this file: each behavior fires a macro when it is held or taps a parameterized keycode
- macro.dtsi: contains macro defintions. For example we may have a macro that sends two ## when the key is held
- general.dtsi: define a hold tap function for each behavior. It looks like layer 0 will be enabled when held, but the heavior fires a macro instead a zero

The below is temporary because Nick Conway started his dev branch before main zmk released parameterized macros. Once parameterized macros are here, we should be able to combine all these macros into like 3-4. #TODO remove this in the future
*/

// brackets, quotes then put cursor inside

ZMK_BEHAVIOR(ht_brc, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_brc>, <&kp>;	
)

ZMK_BEHAVIOR(ht_lgt, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_lgt>, <&kp>;	
)

ZMK_BEHAVIOR(ht_bkt, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_bkt>, <&kp>;	
)

ZMK_BEHAVIOR(ht_par, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_par>, <&kp>;	
)

ZMK_BEHAVIOR(ht_sqt, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_sqt>, <&kp>;	
)

ZMK_BEHAVIOR(ht_dqt, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_dqt>, <&kp>;	
)

// double tap keys

ZMK_BEHAVIOR(ht_bslh, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_bslh>, <&kp>;	
)

ZMK_BEHAVIOR(ht_fslh, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_fslh>, <&kp>;	
)

ZMK_BEHAVIOR(ht_und, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_und>, <&kp>;	
)

ZMK_BEHAVIOR(ht_min, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_min>, <&kp>;	
)

ZMK_BEHAVIOR(ht_pipe, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_pipe>, <&kp>;	
)

ZMK_BEHAVIOR(ht_hash, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_hash>, <&kp>;	
)

ZMK_BEHAVIOR(ht_eql, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_eql>, <&kp>;	
)

ZMK_BEHAVIOR(ht_amp, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_amp>, <&kp>;	
)

// custom macros

ZMK_BEHAVIOR(ht_neql, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_neql>, <&kp>;	
)

ZMK_BEHAVIOR(ht_grv, hold_tap, 
	ZMK_HOLDTAP_CORE
	bindings = <&m_grv>, <&kp>;	
)
