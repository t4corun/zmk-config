#include <behaviors.dtsi>

#include "t4corun.h"

#include "../T4CORUN/mouse.dtsi"

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    behaviors {
        gresc: grave_escape {
            label          = "grave_escape";
            compatible     = "zmk,behavior-mod-morph";
            mods           = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods      = <(MOD_RGUI)>;
            #binding-cells = <0>;
            bindings       = <&kp ESC>, <&kp GRAVE>;
        };		
		HOLD_TAP(ht, tap_preferred, &kp, &kp)
		HOLD_TAP(dt, tap_preferred, &kp &kp, &kp)
		HOLD_TAP(dtl, tap_preferred, &kp &kp &kp LEFT, &kp)
		HOLD_TAP(dts, tap_preferred, &kp SPACE &kp &kp &kp SPACE, &kp)
		HOLD_TAP(tri, tap_preferred, &kp &kp &kp, &kp)
		
		HOLD_TAP(lrbrc, tap_preferred, &kp LBRC &kp RBRC &kp LEFT, &kp)
		HOLD_TAP(lrbkt, tap_preferred, &kp LBKT &kp RBKT &kp LEFT, &kp)
		HOLD_TAP(lrpar, tap_preferred, &kp LPAR &kp RPAR &kp LEFT, &kp)
		HOLD_TAP(lgt, tap_preferred, &kp LT &kp RT &kp LEFT, &kp)
		HOLD_TAP(ne, tap_preferred, &kp SPACE &kp EXCL &kp EQUAL &kp SPACE, &kp)

		TAP_DANCE(shftcaps, "<&sk LSHFT>, <&caps_word>")
    };

	combos {
		compatible = "zmk,combos";
		COMBO(config, &mo CONFIG, 9 29)
	};

	conditional_layers {
		compatible = "zmk,conditional-layers";
		tri_layer {
			if-layers = <NUMBER, NAVI>;
			then-layer = <SYMBOL>;
		}
	};
};

&lt {
    tapping-term-ms = <TAPPING_TERM>;
};

&sk {
    release-after-ms = <STICKYKEY_TIMEOUT>;
    quick-release;
};

&caps_word {
    continue-list = <UNDER MINUS BSPC LSHFT RSHFT>;
};